// Generated by view binder compiler. Do not edit!
package com.example.mad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mad.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView appCompatImageView;

  @NonNull
  public final AppCompatImageView appCompatImageView2;

  @NonNull
  public final AutoCompleteTextView autoCompleteTextView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView imageV5;

  @NonNull
  public final ImageButton imageback;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final TextInputLayout text1;

  @NonNull
  public final TextInputEditText text10;

  @NonNull
  public final TextInputEditText text2;

  @NonNull
  public final TextInputLayout text3;

  @NonNull
  public final TextInputEditText text4;

  @NonNull
  public final TextInputLayout text5;

  @NonNull
  public final TextInputLayout text9;

  @NonNull
  public final TextView topText2;

  @NonNull
  public final View topView;

  private EditBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView appCompatImageView,
      @NonNull AppCompatImageView appCompatImageView2,
      @NonNull AutoCompleteTextView autoCompleteTextView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ImageView imageV5,
      @NonNull ImageButton imageback, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull ScrollView scrollView2,
      @NonNull TextInputLayout text1, @NonNull TextInputEditText text10,
      @NonNull TextInputEditText text2, @NonNull TextInputLayout text3,
      @NonNull TextInputEditText text4, @NonNull TextInputLayout text5,
      @NonNull TextInputLayout text9, @NonNull TextView topText2, @NonNull View topView) {
    this.rootView = rootView;
    this.appCompatImageView = appCompatImageView;
    this.appCompatImageView2 = appCompatImageView2;
    this.autoCompleteTextView = autoCompleteTextView;
    this.constraintLayout = constraintLayout;
    this.imageV5 = imageV5;
    this.imageback = imageback;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.scrollView2 = scrollView2;
    this.text1 = text1;
    this.text10 = text10;
    this.text2 = text2;
    this.text3 = text3;
    this.text4 = text4;
    this.text5 = text5;
    this.text9 = text9;
    this.topText2 = topText2;
    this.topView = topView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatImageView;
      AppCompatImageView appCompatImageView = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView == null) {
        break missingId;
      }

      id = R.id.appCompatImageView2;
      AppCompatImageView appCompatImageView2 = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView2 == null) {
        break missingId;
      }

      id = R.id.autoCompleteTextView;
      AutoCompleteTextView autoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.imageV5;
      ImageView imageV5 = ViewBindings.findChildViewById(rootView, id);
      if (imageV5 == null) {
        break missingId;
      }

      id = R.id.imageback;
      ImageButton imageback = ViewBindings.findChildViewById(rootView, id);
      if (imageback == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.text1;
      TextInputLayout text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text10;
      TextInputEditText text10 = ViewBindings.findChildViewById(rootView, id);
      if (text10 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextInputEditText text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextInputLayout text3 = ViewBindings.findChildViewById(rootView, id);
      if (text3 == null) {
        break missingId;
      }

      id = R.id.text4;
      TextInputEditText text4 = ViewBindings.findChildViewById(rootView, id);
      if (text4 == null) {
        break missingId;
      }

      id = R.id.text5;
      TextInputLayout text5 = ViewBindings.findChildViewById(rootView, id);
      if (text5 == null) {
        break missingId;
      }

      id = R.id.text9;
      TextInputLayout text9 = ViewBindings.findChildViewById(rootView, id);
      if (text9 == null) {
        break missingId;
      }

      id = R.id.topText2;
      TextView topText2 = ViewBindings.findChildViewById(rootView, id);
      if (topText2 == null) {
        break missingId;
      }

      id = R.id.topView;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new EditBinding((ConstraintLayout) rootView, appCompatImageView, appCompatImageView2,
          autoCompleteTextView, constraintLayout, imageV5, imageback, linearLayout, linearLayout2,
          scrollView2, text1, text10, text2, text3, text4, text5, text9, topText2, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
