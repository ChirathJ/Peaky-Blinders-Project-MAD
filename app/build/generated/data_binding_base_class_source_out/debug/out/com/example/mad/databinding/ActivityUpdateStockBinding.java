// Generated by view binder compiler. Do not edit!
package com.example.mad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mad.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateStockBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView appCompatImageView;

  @NonNull
  public final AppCompatImageView appCompatImageView2;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView details1;

  @NonNull
  public final ImageView imageV5;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView stockID;

  @NonNull
  public final TextView topText2;

  @NonNull
  public final View topView;

  @NonNull
  public final TextInputLayout upCategory;

  @NonNull
  public final TextInputEditText upCategory1;

  @NonNull
  public final TextInputLayout upName;

  @NonNull
  public final TextInputEditText upName1;

  @NonNull
  public final TextInputLayout upQuantity;

  @NonNull
  public final TextInputEditText upQuantity1;

  @NonNull
  public final TextInputLayout upUnitPrice;

  @NonNull
  public final TextInputEditText upUnitPrice1;

  @NonNull
  public final ImageButton updateButton;

  private ActivityUpdateStockBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView appCompatImageView,
      @NonNull AppCompatImageView appCompatImageView2, @NonNull ImageButton backButton,
      @NonNull ConstraintLayout constraintLayout, @NonNull TextView details1,
      @NonNull ImageView imageV5, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull TextView stockID, @NonNull TextView topText2,
      @NonNull View topView, @NonNull TextInputLayout upCategory,
      @NonNull TextInputEditText upCategory1, @NonNull TextInputLayout upName,
      @NonNull TextInputEditText upName1, @NonNull TextInputLayout upQuantity,
      @NonNull TextInputEditText upQuantity1, @NonNull TextInputLayout upUnitPrice,
      @NonNull TextInputEditText upUnitPrice1, @NonNull ImageButton updateButton) {
    this.rootView = rootView;
    this.appCompatImageView = appCompatImageView;
    this.appCompatImageView2 = appCompatImageView2;
    this.backButton = backButton;
    this.constraintLayout = constraintLayout;
    this.details1 = details1;
    this.imageV5 = imageV5;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.stockID = stockID;
    this.topText2 = topText2;
    this.topView = topView;
    this.upCategory = upCategory;
    this.upCategory1 = upCategory1;
    this.upName = upName;
    this.upName1 = upName1;
    this.upQuantity = upQuantity;
    this.upQuantity1 = upQuantity1;
    this.upUnitPrice = upUnitPrice;
    this.upUnitPrice1 = upUnitPrice1;
    this.updateButton = updateButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateStockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateStockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_stock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateStockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatImageView;
      AppCompatImageView appCompatImageView = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView == null) {
        break missingId;
      }

      id = R.id.appCompatImageView2;
      AppCompatImageView appCompatImageView2 = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView2 == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.details1;
      TextView details1 = ViewBindings.findChildViewById(rootView, id);
      if (details1 == null) {
        break missingId;
      }

      id = R.id.imageV5;
      ImageView imageV5 = ViewBindings.findChildViewById(rootView, id);
      if (imageV5 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.stockID;
      TextView stockID = ViewBindings.findChildViewById(rootView, id);
      if (stockID == null) {
        break missingId;
      }

      id = R.id.topText2;
      TextView topText2 = ViewBindings.findChildViewById(rootView, id);
      if (topText2 == null) {
        break missingId;
      }

      id = R.id.topView;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      id = R.id.upCategory;
      TextInputLayout upCategory = ViewBindings.findChildViewById(rootView, id);
      if (upCategory == null) {
        break missingId;
      }

      id = R.id.upCategory1;
      TextInputEditText upCategory1 = ViewBindings.findChildViewById(rootView, id);
      if (upCategory1 == null) {
        break missingId;
      }

      id = R.id.upName;
      TextInputLayout upName = ViewBindings.findChildViewById(rootView, id);
      if (upName == null) {
        break missingId;
      }

      id = R.id.upName1;
      TextInputEditText upName1 = ViewBindings.findChildViewById(rootView, id);
      if (upName1 == null) {
        break missingId;
      }

      id = R.id.upQuantity;
      TextInputLayout upQuantity = ViewBindings.findChildViewById(rootView, id);
      if (upQuantity == null) {
        break missingId;
      }

      id = R.id.upQuantity1;
      TextInputEditText upQuantity1 = ViewBindings.findChildViewById(rootView, id);
      if (upQuantity1 == null) {
        break missingId;
      }

      id = R.id.upUnitPrice;
      TextInputLayout upUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (upUnitPrice == null) {
        break missingId;
      }

      id = R.id.upUnitPrice1;
      TextInputEditText upUnitPrice1 = ViewBindings.findChildViewById(rootView, id);
      if (upUnitPrice1 == null) {
        break missingId;
      }

      id = R.id.update_button;
      ImageButton updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      return new ActivityUpdateStockBinding((ConstraintLayout) rootView, appCompatImageView,
          appCompatImageView2, backButton, constraintLayout, details1, imageV5, linearLayout,
          linearLayout2, stockID, topText2, topView, upCategory, upCategory1, upName, upName1,
          upQuantity, upQuantity1, upUnitPrice, upUnitPrice1, updateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
