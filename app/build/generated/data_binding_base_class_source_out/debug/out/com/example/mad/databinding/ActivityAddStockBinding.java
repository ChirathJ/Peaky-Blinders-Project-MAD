// Generated by view binder compiler. Do not edit!
package com.example.mad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mad.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddStockBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView appCompatImageView;

  @NonNull
  public final AppCompatImageView appCompatImageView3;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ImageView imageV5;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ImageButton saveButton;

  @NonNull
  public final TextInputLayout stockCategory;

  @NonNull
  public final TextInputEditText stockCategory1;

  @NonNull
  public final TextInputLayout stockName;

  @NonNull
  public final TextInputEditText stockName1;

  @NonNull
  public final TextInputLayout stockQuantity;

  @NonNull
  public final TextInputEditText stockQuantity1;

  @NonNull
  public final TextInputLayout stockUnitPrice;

  @NonNull
  public final TextInputEditText stockUnitPrice1;

  @NonNull
  public final TextView topText2;

  @NonNull
  public final View topView;

  private ActivityAddStockBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView appCompatImageView,
      @NonNull AppCompatImageView appCompatImageView3, @NonNull ImageButton backButton,
      @NonNull ImageView imageV5, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull ImageButton saveButton,
      @NonNull TextInputLayout stockCategory, @NonNull TextInputEditText stockCategory1,
      @NonNull TextInputLayout stockName, @NonNull TextInputEditText stockName1,
      @NonNull TextInputLayout stockQuantity, @NonNull TextInputEditText stockQuantity1,
      @NonNull TextInputLayout stockUnitPrice, @NonNull TextInputEditText stockUnitPrice1,
      @NonNull TextView topText2, @NonNull View topView) {
    this.rootView = rootView;
    this.appCompatImageView = appCompatImageView;
    this.appCompatImageView3 = appCompatImageView3;
    this.backButton = backButton;
    this.imageV5 = imageV5;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.saveButton = saveButton;
    this.stockCategory = stockCategory;
    this.stockCategory1 = stockCategory1;
    this.stockName = stockName;
    this.stockName1 = stockName1;
    this.stockQuantity = stockQuantity;
    this.stockQuantity1 = stockQuantity1;
    this.stockUnitPrice = stockUnitPrice;
    this.stockUnitPrice1 = stockUnitPrice1;
    this.topText2 = topText2;
    this.topView = topView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddStockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddStockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_stock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddStockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appCompatImageView;
      AppCompatImageView appCompatImageView = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView == null) {
        break missingId;
      }

      id = R.id.appCompatImageView3;
      AppCompatImageView appCompatImageView3 = ViewBindings.findChildViewById(rootView, id);
      if (appCompatImageView3 == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.imageV5;
      ImageView imageV5 = ViewBindings.findChildViewById(rootView, id);
      if (imageV5 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.save_button;
      ImageButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.stockCategory;
      TextInputLayout stockCategory = ViewBindings.findChildViewById(rootView, id);
      if (stockCategory == null) {
        break missingId;
      }

      id = R.id.stockCategory1;
      TextInputEditText stockCategory1 = ViewBindings.findChildViewById(rootView, id);
      if (stockCategory1 == null) {
        break missingId;
      }

      id = R.id.stockName;
      TextInputLayout stockName = ViewBindings.findChildViewById(rootView, id);
      if (stockName == null) {
        break missingId;
      }

      id = R.id.stockName1;
      TextInputEditText stockName1 = ViewBindings.findChildViewById(rootView, id);
      if (stockName1 == null) {
        break missingId;
      }

      id = R.id.stockQuantity;
      TextInputLayout stockQuantity = ViewBindings.findChildViewById(rootView, id);
      if (stockQuantity == null) {
        break missingId;
      }

      id = R.id.stockQuantity1;
      TextInputEditText stockQuantity1 = ViewBindings.findChildViewById(rootView, id);
      if (stockQuantity1 == null) {
        break missingId;
      }

      id = R.id.stockUnitPrice;
      TextInputLayout stockUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (stockUnitPrice == null) {
        break missingId;
      }

      id = R.id.stockUnitPrice1;
      TextInputEditText stockUnitPrice1 = ViewBindings.findChildViewById(rootView, id);
      if (stockUnitPrice1 == null) {
        break missingId;
      }

      id = R.id.topText2;
      TextView topText2 = ViewBindings.findChildViewById(rootView, id);
      if (topText2 == null) {
        break missingId;
      }

      id = R.id.topView;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new ActivityAddStockBinding((ConstraintLayout) rootView, appCompatImageView,
          appCompatImageView3, backButton, imageV5, linearLayout, linearLayout2, saveButton,
          stockCategory, stockCategory1, stockName, stockName1, stockQuantity, stockQuantity1,
          stockUnitPrice, stockUnitPrice1, topText2, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
